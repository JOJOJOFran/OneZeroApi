// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OneZero.EntityFrameworkCore.SqlServer;

namespace SouthStar.VehSch.Api.Migrations
{
    [DbContext(typeof(MSSqlContext))]
    [Migration("20190214132945_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OneZero.Application.Models.Permissions.ModulePermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsDelete");

                    b.Property<Guid>("ModuleId");

                    b.Property<Guid>("PermissionId");

                    b.Property<int>("SeqNo");

                    b.Property<Guid>("TenanId");

                    b.HasKey("Id");

                    b.HasIndex("SeqNo");

                    b.HasIndex("PermissionId", "ModuleId");

                    b.ToTable("TModulePermission");
                });

            modelBuilder.Entity("OneZero.Application.Models.Permissions.ModuleType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool>("IsDelete");

                    b.Property<Guid?>("ModuleTypeId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<Guid>("ParentId");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<Guid?>("RoleId");

                    b.Property<Guid>("TenanId");

                    b.HasKey("Id");

                    b.HasIndex("ModuleTypeId");

                    b.HasIndex("Name");

                    b.HasIndex("RoleId");

                    b.ToTable("TModuleType");
                });

            modelBuilder.Entity("OneZero.Application.Models.Permissions.PermissionType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ApiPath")
                        .HasMaxLength(50);

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool>("IsDelete");

                    b.Property<Guid?>("ModuleTypeId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Remark")
                        .HasMaxLength(50);

                    b.Property<int>("RowNo");

                    b.Property<Guid>("TenanId");

                    b.HasKey("Id");

                    b.HasIndex("ModuleTypeId");

                    b.HasIndex("Name");

                    b.ToTable("TPermissionType");
                });

            modelBuilder.Entity("OneZero.Application.Models.Permissions.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<bool>("IsDelete");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<string>("Remark")
                        .HasMaxLength(2000);

                    b.Property<Guid>("TenanId");

                    b.Property<Guid?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("UserId");

                    b.ToTable("TRole");
                });

            modelBuilder.Entity("OneZero.Application.Models.Permissions.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(2000);

                    b.Property<bool>("EmailConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<bool>("LockoutEnabled")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("LockoutEnd");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(2000);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool>("PhoneConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<Guid>("TenanId");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("TUser");
                });

            modelBuilder.Entity("OneZero.Application.Models.Permissions.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsDelete");

                    b.Property<Guid>("RoleId");

                    b.Property<int>("RowNo");

                    b.Property<Guid>("TenanId");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId", "UserId");

                    b.ToTable("TUserRole");
                });

            modelBuilder.Entity("OneZero.Application.Models.Permissions.ModuleType", b =>
                {
                    b.HasOne("OneZero.Application.Models.Permissions.ModuleType")
                        .WithMany("SubMouldes")
                        .HasForeignKey("ModuleTypeId");

                    b.HasOne("OneZero.Application.Models.Permissions.Role")
                        .WithMany("Modules")
                        .HasForeignKey("RoleId");
                });

            modelBuilder.Entity("OneZero.Application.Models.Permissions.PermissionType", b =>
                {
                    b.HasOne("OneZero.Application.Models.Permissions.ModuleType")
                        .WithMany("Permissions")
                        .HasForeignKey("ModuleTypeId");
                });

            modelBuilder.Entity("OneZero.Application.Models.Permissions.Role", b =>
                {
                    b.HasOne("OneZero.Application.Models.Permissions.User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
