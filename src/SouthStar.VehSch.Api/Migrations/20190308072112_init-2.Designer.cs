// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OneZero.EntityFrameworkCore.SqlServer;

namespace SouthStar.VehSch.Api.Migrations
{
    [DbContext(typeof(MSSqlContext))]
    [Migration("20190308072112_init-2")]
    partial class init2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OneZero.Application.Models.Permissions.ModulePermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsDelete");

                    b.Property<Guid>("ModuleId");

                    b.Property<Guid>("PermissionId");

                    b.Property<int>("SeqNo");

                    b.Property<Guid>("TenanId");

                    b.HasKey("Id");

                    b.HasIndex("SeqNo");

                    b.HasIndex("PermissionId", "ModuleId");

                    b.ToTable("TModulePermission");
                });

            modelBuilder.Entity("OneZero.Application.Models.Permissions.ModuleType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool>("IsDelete");

                    b.Property<Guid?>("ModuleTypeId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<Guid>("ParentId");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<Guid?>("RoleId");

                    b.Property<Guid>("TenanId");

                    b.HasKey("Id");

                    b.HasIndex("ModuleTypeId");

                    b.HasIndex("Name");

                    b.HasIndex("RoleId");

                    b.ToTable("TModuleType");
                });

            modelBuilder.Entity("OneZero.Application.Models.Permissions.PermissionType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ApiPath")
                        .HasMaxLength(50);

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool>("IsDelete");

                    b.Property<Guid?>("ModuleTypeId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Remark")
                        .HasMaxLength(50);

                    b.Property<int>("RowNo");

                    b.Property<Guid>("TenanId");

                    b.HasKey("Id");

                    b.HasIndex("ModuleTypeId");

                    b.HasIndex("Name");

                    b.ToTable("TPermissionType");
                });

            modelBuilder.Entity("OneZero.Application.Models.Permissions.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<bool>("IsDelete");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<string>("Remark")
                        .HasMaxLength(2000);

                    b.Property<Guid>("TenanId");

                    b.Property<Guid?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("UserId");

                    b.ToTable("TRole");
                });

            modelBuilder.Entity("OneZero.Application.Models.Permissions.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(2000);

                    b.Property<bool>("EmailConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<bool>("LockoutEnabled")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset>("LockoutEnd");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(2000);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool>("PhoneConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<Guid>("TenanId");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("TUser");
                });

            modelBuilder.Entity("OneZero.Application.Models.Permissions.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsDelete");

                    b.Property<Guid>("RoleId");

                    b.Property<int>("RowNo");

                    b.Property<Guid>("TenanId");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId", "UserId");

                    b.ToTable("TUserRole");
                });

            modelBuilder.Entity("SouthStar.VehSch.Api.Areas.ApplicationFlow.Models.CheckContents", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ApplyId");

                    b.Property<string>("ApplyNum")
                        .HasMaxLength(50);

                    b.Property<int>("ApplyType");

                    b.Property<string>("CheckReply")
                        .HasMaxLength(500);

                    b.Property<int>("CheckStatus");

                    b.Property<Guid>("CheckUserId");

                    b.Property<string>("CheckUserName")
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreateDate");

                    b.Property<bool>("IsDelete");

                    b.Property<DateTime>("LastUpdateTime");

                    b.Property<Guid>("TenanId");

                    b.HasKey("Id");

                    b.HasIndex("ApplyNum")
                        .IsUnique()
                        .HasFilter("[ApplyNum] IS NOT NULL");

                    b.ToTable("TCheckContents");
                });

            modelBuilder.Entity("SouthStar.VehSch.Api.Areas.ApplicationFlow.Models.VehicleApplications", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ApplicantId");

                    b.Property<string>("ApplicantName")
                        .HasMaxLength(100);

                    b.Property<string>("ApplicantPhone")
                        .HasMaxLength(30);

                    b.Property<string>("ApplyNum")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ApplyReson")
                        .HasMaxLength(500);

                    b.Property<DateTime>("BackPlanTime");

                    b.Property<int>("CarProperty");

                    b.Property<string>("CarType")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid>("DepartmentId");

                    b.Property<string>("DepartmentName")
                        .HasMaxLength(500);

                    b.Property<string>("Destination")
                        .HasMaxLength(200);

                    b.Property<string>("FileName")
                        .HasMaxLength(100);

                    b.Property<bool>("IsDelete");

                    b.Property<Guid>("ReciverId");

                    b.Property<string>("ReciverMobile")
                        .HasMaxLength(50);

                    b.Property<string>("Remark")
                        .HasMaxLength(500);

                    b.Property<DateTime>("StartPlanTime");

                    b.Property<string>("StartPoint")
                        .HasMaxLength(200);

                    b.Property<int>("Status");

                    b.Property<Guid>("TenanId");

                    b.Property<string>("UseArea")
                        .HasMaxLength(100);

                    b.Property<string>("UserCount")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("UserMobile")
                        .HasMaxLength(50);

                    b.Property<string>("UserName")
                        .HasMaxLength(50);

                    b.Property<string>("UserTitle")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("ApplyNum")
                        .IsUnique();

                    b.ToTable("TVehicleApplications");
                });

            modelBuilder.Entity("SouthStar.VehSch.Api.Areas.Dispatch.Models.DispatchFees", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("DispatchId");

                    b.Property<float>("EndMiles");

                    b.Property<float>("EtcFee");

                    b.Property<float>("HighSpeedFee");

                    b.Property<bool>("IsDelete");

                    b.Property<float>("OilFee");

                    b.Property<float>("ParkFee");

                    b.Property<float>("StartMiles");

                    b.Property<Guid>("TenanId");

                    b.Property<float>("TotalPrice");

                    b.Property<float>("UnitPrice");

                    b.HasKey("Id");

                    b.HasIndex("DispatchId")
                        .IsUnique();

                    b.ToTable("TDispatchFees");
                });

            modelBuilder.Entity("SouthStar.VehSch.Api.Areas.Dispatch.Models.VehicleDispatchs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ApplicantName");

                    b.Property<string>("ApplicantPhone");

                    b.Property<DateTime>("ApplyDate");

                    b.Property<Guid>("ApplyId");

                    b.Property<string>("ApplyNum")
                        .HasMaxLength(100);

                    b.Property<string>("ApplyReson")
                        .HasMaxLength(500);

                    b.Property<DateTime>("BackPlanTime");

                    b.Property<int>("CarProperty");

                    b.Property<string>("CarType")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("Destination")
                        .HasMaxLength(200);

                    b.Property<int>("DispatchType");

                    b.Property<Guid>("DriverId");

                    b.Property<string>("DriverName");

                    b.Property<string>("DriverPhone");

                    b.Property<bool>("IsDelete");

                    b.Property<string>("PlateNumber");

                    b.Property<int>("QueueNo");

                    b.Property<DateTime>("StartPlanTime");

                    b.Property<string>("StartPoint")
                        .HasMaxLength(200);

                    b.Property<Guid>("TenanId");

                    b.Property<string>("UserCount");

                    b.Property<string>("UserDepartment");

                    b.Property<string>("UserMobile");

                    b.Property<string>("UserName");

                    b.Property<string>("UserTitle");

                    b.Property<Guid>("VehcileId");

                    b.HasKey("Id");

                    b.HasIndex("ApplyNum")
                        .IsUnique()
                        .HasFilter("[ApplyNum] IS NOT NULL");

                    b.ToTable("TVehicleDispatchs");
                });

            modelBuilder.Entity("SouthStar.VehSch.Api.Areas.Setting.Models.Departments", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<bool>("IsDelete");

                    b.Property<int>("ParentDepartmentId");

                    b.Property<string>("Remark")
                        .HasMaxLength(500);

                    b.Property<Guid>("TenanId");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentName")
                        .IsUnique();

                    b.ToTable("TDepartments");
                });

            modelBuilder.Entity("SouthStar.VehSch.Api.Areas.Setting.Models.Drivers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .HasMaxLength(100);

                    b.Property<int>("Age");

                    b.Property<Guid>("DepartmentId");

                    b.Property<string>("DrivingLicNum")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("DrivingLicType")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<string>("Image")
                        .HasMaxLength(50);

                    b.Property<bool>("IsDelete");

                    b.Property<DateTime>("IssueDate");

                    b.Property<string>("MobileNum")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("PermittedType")
                        .HasMaxLength(30);

                    b.Property<string>("PhoneNum")
                        .HasMaxLength(20);

                    b.Property<string>("Remark")
                        .HasMaxLength(500);

                    b.Property<int>("Sex");

                    b.Property<int>("Status")
                        .HasMaxLength(10);

                    b.Property<Guid>("TenanId");

                    b.HasKey("Id");

                    b.HasIndex("DrivingLicNum")
                        .IsUnique();

                    b.HasIndex("PhoneNum")
                        .IsUnique()
                        .HasFilter("[PhoneNum] IS NOT NULL");

                    b.ToTable("TDrivers");
                });

            modelBuilder.Entity("SouthStar.VehSch.Api.Areas.Setting.Models.Vehicles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ApprovedSeating");

                    b.Property<string>("BookOriginValue")
                        .HasMaxLength(20);

                    b.Property<string>("CarIcon")
                        .HasMaxLength(100);

                    b.Property<string>("CurbWeight")
                        .HasMaxLength(20);

                    b.Property<int>("CurrentState")
                        .HasMaxLength(50);

                    b.Property<Guid>("DepartmentId");

                    b.Property<string>("Displacament")
                        .HasMaxLength(20);

                    b.Property<Guid>("DriverId");

                    b.Property<string>("EngineNo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("FACardNum")
                        .HasMaxLength(20);

                    b.Property<string>("Image")
                        .HasMaxLength(100);

                    b.Property<int>("InitMileage");

                    b.Property<bool>("IsDelete");

                    b.Property<string>("LoadWeight")
                        .HasMaxLength(20);

                    b.Property<int>("OilType")
                        .HasMaxLength(20);

                    b.Property<string>("PlateNumber")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("PurchasePrice");

                    b.Property<string>("Remark")
                        .HasMaxLength(500);

                    b.Property<int>("TankCapacity");

                    b.Property<Guid>("TenanId");

                    b.Property<string>("TerminalNo")
                        .HasMaxLength(30);

                    b.Property<string>("VIN")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("VechileType")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("VehicleBrand")
                        .HasMaxLength(50);

                    b.Property<string>("VehicleColor")
                        .HasMaxLength(20);

                    b.Property<string>("VehicleLicOwner")
                        .HasMaxLength(30);

                    b.Property<int>("VehicleProperties");

                    b.HasKey("Id");

                    b.HasIndex("EngineNo")
                        .IsUnique();

                    b.HasIndex("PlateNumber")
                        .IsUnique();

                    b.ToTable("TVehicles");
                });

            modelBuilder.Entity("OneZero.Application.Models.Permissions.ModuleType", b =>
                {
                    b.HasOne("OneZero.Application.Models.Permissions.ModuleType")
                        .WithMany("SubMouldes")
                        .HasForeignKey("ModuleTypeId");

                    b.HasOne("OneZero.Application.Models.Permissions.Role")
                        .WithMany("Modules")
                        .HasForeignKey("RoleId");
                });

            modelBuilder.Entity("OneZero.Application.Models.Permissions.PermissionType", b =>
                {
                    b.HasOne("OneZero.Application.Models.Permissions.ModuleType")
                        .WithMany("Permissions")
                        .HasForeignKey("ModuleTypeId");
                });

            modelBuilder.Entity("OneZero.Application.Models.Permissions.Role", b =>
                {
                    b.HasOne("OneZero.Application.Models.Permissions.User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
